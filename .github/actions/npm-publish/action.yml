name: 'NPM Publish'
description: 'GitHub Action to publish NPM packages'
inputs:
  github_token:
    description: 'GitHub Token'
    required: true
  release-type:
    description: 'one of: major, minor, path, prerelease'
    required: true
  npm_token:
    description: 'Optional. If not provided, publishing to npm will be skipped. NPM token with publish permission.'
    required: false
  access:
    description: 'Optional. Npm access flag. Default is public'
    required: false
  # gchat_webhook:
  #   description: 'Optional. Google chat notification webhook url.'
  #   required: false
  # discord_webhook:
  #   description: 'Optional. Discord chat notification webhook url.'
  #   required: false
  path:
    description: 'Optional. Path to dir containing the npm package.'
    required: false
branding:
  icon: truck
  color: red
runs:
  steps:
      - name: Exit if release type argument is invalid
        if: ${{ inputs.release-type != 'major' && inputs.release-type != 'minor' && inputs.release-type != 'patch' && inputs.release-type != 'prerelease'}}
        run: exit 1
        shell: bash
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3  
        with:
          registry-url: https://registry.npmjs.org/
          node-version: 16

      # Install dependencies
      - name: Install dependencies
        run: cd ${{ inputs.path }} && yarn install --frozen-lockfile
        shell: bash

      # # Test the project
      # - name: Tests
      #   run: yarn test

      # Prepare release version and NPM release tag
      - name: Bump release version
        if: ${{ inputs.release-type != 'prerelease' }}
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        shell: bash
        env:
          RELEASE_TYPE: ${{ inputs.release-type }}

      - name: Bump pre-release version
        if: ${{ inputs.release-type == 'prerelease' }}
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
        shell: bash
        env:
          RELEASE_TYPE: ${{ inputs.release-type }}

      # Build
      - name: Build
        run: cd ${{ inputs.path }} && yarn build
        shell: bash

      # Publish version to public repository
      - name: Publish
        run: yarn publish --verbose --access $ { inputs.access }} --tag ${{ env.RELEASE_TAG }}
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ inputs.npm_token }}

      # Push changes to origin
      - name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ inputs.github_token }}
        run: |
          git push origin && git push --tags
        shell: bash
