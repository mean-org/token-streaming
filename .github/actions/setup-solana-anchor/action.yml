name: 'Setup Solana and Anchor'
description: 'Setup Rust, Cargo, Node, Solana and Anchor'
inputs:
  solana-cli-version:
    description: 'Solana CLI version'
    required: true
  anchor-cli-version:
    description: 'Anchor CLI version'
    required: true
  rust-toolchain:
    description: 'Rust toolchain'
    required: false
    default: stable
  node-version:
    description: 'Node version'
    required: false
    default: 16
  solana-default-keypair:
    description: 'Solana default keypair'
    required: false
    type: string

runs:
  using: 'composite'
  steps:
      - uses: actions/checkout@v3
      
      # Install Rust
      - name: Cache Cargo registry + index
        uses: actions/cache@v3
        id: cache-cargo
        with:
            path: |
                ~/.cargo/bin/
                ~/.cargo/registry/index/
                ~/.cargo/registry/cache/
                ~/.cargo/git/db/
            key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust ${{ inputs.RUST_TOOLCHAIN }}
        uses: actions-rs/toolchain@v1
        with:
            override: true
            profile: minimal
            toolchain: ${{ inputs.RUST_TOOLCHAIN }}
            components: rustfmt, clippy

      # Run build
      - name: Cache build
        uses: Swatinem/rust-cache@v1

      - name: Install Linux dependencies
        run: |
            sudo apt-get update
            sudo apt-get install -y pkg-config build-essential libudev-dev jq

      # Install Solana
      - name: Cache Solana binaries
        id: solana-cache
        uses: actions/cache@v3
        with:
            path: |
                ~/.cache/solana
                ~/.local/share/solana/install
            key: ${{ runner.os }}-${{ inputs.SOLANA_CLI_VERSION }}

      - name: Install Solana
        if: steps.solana-cache.outputs.cache-hit != 'true'
        run: sh -c "$(curl -sSfL https://release.solana.com/v${{inputs.SOLANA_CLI_VERSION}}/install)"
        shell: bash

      - name: Setup Solana Path
        run: |
            mkdir -p ~/.config/solana/
            echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
            export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
            solana config set --url localhost
            solana config get
        shell: bash

      # Setup default keypair
      - name: Copy keypair from inputs
        if: ${{ inputs.solana-default-keypair != '' }}
        run: echo ${{ inputs.solana-default-keypair }} > ~/.config/solana/id.json
        shell: bash
      - name: Generate random keypair
        if: ${{ inputs.solana-default-keypair == '' }}
        run: solana-keygen new --no-bip39-passphrase
        shell: bash

      - name: Cargo Target Cache
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-c-target-${{ hashFiles('**/programs/msp/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-c-target-${{ hashFiles('**/programs/msp/Cargo.toml') }}
            ${{ runner.os }}-c-target
      
      # Install Node
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.NODE_VERSION }}
          cache: 'yarn'

      # Yarn Cache      
      - name: Cache packages
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      # Install Anchor
      - name: Install Anchor
        run: yarn global add @project-serum/anchor-cli@${{ inputs.ANCHOR_CLI_VERSION }}
        shell: bash
